# Generated by Django 2.1 on 2018-12-18 20:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Appellation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, default='', max_length=100)),
                ('last_name', models.CharField(blank=True, default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Authorship',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('authorship_order', models.PositiveSmallIntegerField(default=1)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorships', to='abstracts.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Conference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField()),
                ('venue', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='ConferenceSeries',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='DepartmentAssertion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Discipline',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='GenderAssertion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('country', models.CharField(blank=True, default='', max_length=100)),
                ('city', models.CharField(blank=True, default='', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='InstitutionAssertion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
                ('author_supplied', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('conferences_organized', models.ManyToManyField(related_name='organizers', to='abstracts.Conference')),
            ],
        ),
        migrations.CreateModel(
            name='SeriesMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(blank=True)),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='series_memberships', to='abstracts.Conference')),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conference_memberships', to='abstracts.ConferenceSeries')),
            ],
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('submission_type', models.CharField(blank=True, default='', max_length=255)),
                ('state', models.CharField(choices=[('ac', 'accpeted'), ('su', 'submission')], max_length=2)),
                ('full_text', models.TextField(blank=True, default='', max_length=50000)),
                ('full_text_type', models.CharField(choices=[('xml', 'XML'), ('txt', 'plain text')], default='txt', max_length=3)),
                ('disciplines', models.ManyToManyField(blank=True, related_name='versions', to='abstracts.Discipline')),
                ('keywords', models.ManyToManyField(blank=True, related_name='versions', to='abstracts.Keyword')),
                ('languages', models.ManyToManyField(blank=True, related_name='versions', to='abstracts.Language')),
                ('topics', models.ManyToManyField(blank=True, related_name='versions', to='abstracts.Topic')),
            ],
        ),
        migrations.CreateModel(
            name='Work',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('conference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='works', to='abstracts.Conference')),
            ],
        ),
        migrations.AddField(
            model_name='version',
            name='work',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='abstracts.Work'),
        ),
        migrations.AddField(
            model_name='institutionassertion',
            name='asserted_by',
            field=models.ManyToManyField(related_name='institution_assertions', to='abstracts.Version'),
        ),
        migrations.AddField(
            model_name='institutionassertion',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='institution_memberships', to='abstracts.Author'),
        ),
        migrations.AddField(
            model_name='institutionassertion',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assertions', to='abstracts.Institution'),
        ),
        migrations.AddField(
            model_name='genderassertion',
            name='asserted_by',
            field=models.ManyToManyField(related_name='gender_assertions', to='abstracts.Version'),
        ),
        migrations.AddField(
            model_name='genderassertion',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gender_memberships', to='abstracts.Author'),
        ),
        migrations.AddField(
            model_name='genderassertion',
            name='gender',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gender_authors', to='abstracts.Gender'),
        ),
        migrations.AddField(
            model_name='departmentassertion',
            name='asserted_by',
            field=models.ManyToManyField(related_name='department_assertions', to='abstracts.Version'),
        ),
        migrations.AddField(
            model_name='departmentassertion',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='department_memberships', to='abstracts.Author'),
        ),
        migrations.AddField(
            model_name='departmentassertion',
            name='department',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assertions', to='abstracts.Department'),
        ),
        migrations.AddField(
            model_name='department',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='departments', to='abstracts.Institution'),
        ),
        migrations.AddField(
            model_name='conference',
            name='series',
            field=models.ManyToManyField(related_name='conferences', through='abstracts.SeriesMembership', to='abstracts.ConferenceSeries'),
        ),
        migrations.AddField(
            model_name='authorship',
            name='version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorships', to='abstracts.Version'),
        ),
        migrations.AddField(
            model_name='author',
            name='departments',
            field=models.ManyToManyField(related_name='members', through='abstracts.DepartmentAssertion', to='abstracts.Department'),
        ),
        migrations.AddField(
            model_name='author',
            name='genders',
            field=models.ManyToManyField(related_name='members', through='abstracts.GenderAssertion', to='abstracts.Gender'),
        ),
        migrations.AddField(
            model_name='author',
            name='institutions',
            field=models.ManyToManyField(related_name='members', through='abstracts.InstitutionAssertion', to='abstracts.Institution'),
        ),
        migrations.AddField(
            model_name='author',
            name='versions',
            field=models.ManyToManyField(related_name='authors', through='abstracts.Authorship', to='abstracts.Version'),
        ),
        migrations.AddField(
            model_name='appellation',
            name='asserted_by',
            field=models.ManyToManyField(related_name='appellation_assertions', to='abstracts.Version'),
        ),
        migrations.AddField(
            model_name='appellation',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appellations', to='abstracts.Author'),
        ),
        migrations.AlterUniqueTogether(
            name='seriesmembership',
            unique_together={('series', 'number')},
        ),
        migrations.AlterUniqueTogether(
            name='authorship',
            unique_together={('author', 'version', 'authorship_order')},
        ),
    ]
